{"version":3,"file":"src_providers_AuthProvider_tsx.chunk.bundle","mappings":"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","sources":["webpack:///./src/contexts/AuthContext.ts","webpack:///./src/providers/AuthProvider.tsx","webpack:///./src/services/AuthService.ts"],"sourcesContent":["import React from 'react';\n\nconst AuthContext = React.createContext({\n  signIn: () => {},\n  signOut: () => {},\n  signUp: () => {},\n});\n\nconst useAuth = () => React.useContext(AuthContext);\n\nexport {useAuth, AuthContext};\n","import React from 'react';\nimport AuthService from '../services/AuthService';\nimport {AuthContext} from '../contexts/AuthContext';\n\nenum ActionTypes {\n  RESTORE_TOKEN = 'RESTORE_TOKEN',\n  SIGN_IN = 'SIGN_IN',\n  SIGN_OUT = 'SIGN_OUT',\n}\n\ntype Action = {\n  type: ActionTypes;\n  payload?: any;\n};\n\ntype State = {\n  isLoading: boolean;\n  isSignout: boolean;\n};\n\nconst reducer = (prevState: State, action: Action): State => {\n  switch (action.type) {\n    case ActionTypes.RESTORE_TOKEN:\n      return {\n        ...prevState,\n        isSignout: action.payload,\n        isLoading: false,\n      };\n    case ActionTypes.SIGN_IN:\n      return {\n        ...prevState,\n        isSignout: false,\n      };\n    case ActionTypes.SIGN_OUT:\n      return {\n        ...prevState,\n        isSignout: true,\n      };\n    default:\n      return prevState;\n  }\n};\n\nconst AuthProvider = ({\n  children,\n}: {\n  children: (data: State) => React.ReactNode;\n}) => {\n  const [state, dispatch] = React.useReducer(reducer, {\n    isLoading: true,\n    isSignout: true,\n  });\n\n  const authContext = React.useMemo(\n    () => ({\n      signIn: async () => {\n        try {\n          await AuthService.shared.setCredentials('dummy-auth-token');\n        } catch (e) {\n          // Handle error\n        }\n\n        dispatch({type: ActionTypes.SIGN_IN});\n      },\n      signOut: async () => {\n        try {\n          await AuthService.shared.removeCredentials();\n        } catch (e) {\n          // Handle error\n        }\n\n        dispatch({type: ActionTypes.SIGN_OUT});\n      },\n      signUp: async () => {\n        try {\n          await AuthService.shared.setCredentials('dummy-auth-token');\n        } catch (e) {\n          // Handle error\n        }\n\n        dispatch({type: ActionTypes.SIGN_IN});\n      },\n    }),\n    [],\n  );\n\n  React.useEffect(() => {\n    const restoreToken = async () => {\n      let userToken;\n\n      try {\n        userToken = await AuthService.shared.getCredentials();\n      } catch (e) {\n        // Handle error\n      }\n\n      dispatch({type: ActionTypes.RESTORE_TOKEN, payload: !userToken});\n    };\n\n    restoreToken();\n  }, []);\n\n  return (\n    <AuthContext.Provider value={authContext}>\n      {children(state)}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthProvider;\n","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nclass AuthService {\n  TOKEN_KEY = 'token';\n\n  getCredentials(): Promise<string | null> {\n    return AsyncStorage.getItem(this.TOKEN_KEY);\n  }\n\n  setCredentials(token: string): Promise<void> {\n    return AsyncStorage.setItem(this.TOKEN_KEY, token);\n  }\n\n  removeCredentials(): Promise<void> {\n    return AsyncStorage.removeItem(this.TOKEN_KEY);\n  }\n\n  static shared = new AuthService();\n}\n\nexport default AuthService;\n"],"names":["AuthContext","React","createContext","signIn","signOut","signUp","useAuth","useContext","ActionTypes","reducer","prevState","action","type","RESTORE_TOKEN","isSignout","payload","isLoading","SIGN_IN","SIGN_OUT","AuthProvider","children","useReducer","state","dispatch","authContext","useMemo","AuthService","shared","setCredentials","e","removeCredentials","useEffect","restoreToken","userToken","getCredentials","TOKEN_KEY","AsyncStorage","getItem","token","setItem","removeItem"],"sourceRoot":""}